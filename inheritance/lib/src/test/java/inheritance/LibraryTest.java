/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;
// Lab 06 Tests :
class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();

    }



    @Test public void RestaurantConstTest() {
        Restaurant restaurant = new Restaurant("ShamikhRes", 5 ,90);

        assertEquals("ShamikhRes", restaurant.getName());
        assertEquals(5, restaurant.getStars());
        assertEquals(90, restaurant.getPriceCategory());
    }

    @Test public void toStringTest() {
        Restaurant restaurant = new Restaurant("ShamikhRes", 5 ,90);

        assertEquals("the Restaurant ShamikhReshas 5 AS RATE 90$", restaurant.toString());
    }

    @Test public void ReviewConstructorTest(){
        Review review= new Review("ShamikhRes","is good" ,4);
        assertEquals("is good",review.getAuthor());
        assertEquals("ShamikhRes",review.getBody());
        assertEquals(4,review.getStars());
    }

    @Test public void ReviewToStringTest() {
        Review review = new Review("ShamikhRes", "is good", 4);
        assertEquals("ShamikhRes is good voted 4 stars.", review.toString());
    }


    @Test
    public  void addReviewTest(){
        Restaurant restaurant = new Restaurant();
        Review review = new Review("ShamikhRes", "is good", 4);
        Review review1 = new Review("ShamikhRes", "is good", 3);
        Review review2 = new Review("ShamikhRes", "is good", 5);
        restaurant.addReview(review);
        restaurant.addReview(review1);
        restaurant.addReview(review2);
        assertEquals(4,restaurant.getStars());
    }

    // Lab 07 Tests :
    @Test
    public void shopClassTest (){
        Shop shop = new Shop("ShamikhShop","hi",2);
        assertEquals("ShamikhShop",shop.getName());
        assertEquals("hi",shop.getDescription());
        assertEquals(2,shop.getDollarSigns());
    }
    @Test
    public void testAddReview() {
        Shop shop = new Shop("Roosevelt Field","Mall in Garden City",4);
        Review review = new Review("ShamikhShop", "is good", 4);
        Review review1 = new Review("ShamikhShop", "is good", 3);
        Review review2 = new Review("ShamikhShop", "is good", 5);
        shop.addReview(review);
        shop.addReview(review1);
        shop.addReview(review2);
        assertEquals(4,shop.getStars());
    }

    @Test
    public void testTheaterAddMovies(){
        Theater theater = new Theater("Shamikh Pike",new ArrayList<>(),new ArrayList<>());
        theater.addMovie("Harry potter");
        theater.addMovie("Bad Moms");
        theater.addMovie("Aladdin");
        assertTrue(theater.getMovies().contains("Harry potter"));

    }

    @Test
    public void testTheaterRemoveMovies() throws IllegalAccessException {
        Theater theater = new Theater("Shamikh Pike",new ArrayList<>(),new ArrayList<>());
        theater.addMovie("Harry potter");
        theater.addMovie("Bad Moms");
        theater.addMovie("Aladdin");

        theater.removeMovie("Harry potter");
        assertFalse(theater.getMovies().contains("Harry potter"));

    }

}